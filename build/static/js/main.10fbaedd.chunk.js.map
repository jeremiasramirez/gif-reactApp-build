{"version":3,"sources":["components/screengif/screen.class.jsx","components/screengif/screen.component.jsx","components/card/card.component.jsx","components/skeleton/skeleton.card.jsx","services/gif.service.js","pages/home/home.page.jsx","services/search.service.js","pages/search/search.page.jsx","App.jsx","components/menu/menu.component.jsx","routing/app.routing.jsx","index.jsx"],"names":["CreateView","title","img","classGif","this","titleGif","imageGif","containerClass","containerTitle","containerImage","containerCloseClass","existView","containerView","document","createElement","setAttribute","innerHTML","containerImageGif","imageGifs","containerClose","append","rootPage","getElementById","insertAdjacentElement","deleteView","addEventListener","classList","add","timer","subscribe","idContainerView","remove","ScreenGif","createView","CardGif","data","map","gif","key","images","downsized","url","Card","className","onClick","CardHeader","substring","src","alt","Skeletons","CircularProgress","color","getGifs","limit","ajax","get","pipe","pluck","delay","changeState","setData","setLoading","resp","Home","useState","loading","useEffect","unsubscribe","SearchGif","urlSearch","SearchPage","finded","setFinded","textInput","setTextInput","execSearch","length","execHttp","TextField","type","id","variant","onChange","e","target","value","trim","label","Button","disabled","App","to","Menu","exact","activeClassName","RoutingApp","path","component","Main","ReactDOM","render"],"mappings":"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","file":"static/js/main.10fbaedd.chunk.js","sourcesContent":["import { timer } from \"rxjs\";\nimport \"./screen.component.css\"\n\n class CreateView {\n\n    idContainerView;\n    containerView;\n    containerTitle;\n    containerClose;\n    imageGifs;\n    rootPage;\n    titleGif;\n    containerImageGif;\n    imageGif;\n    classGif = {};\n\n    constructor( title=null, img=null ){\n\n        this.titleGif = title;\n        this.imageGif = img;\n\n        this.classGif = {\n            containerClass: \"containerView\",\n            containerTitle: 'containerTitle',\n            containerImage: 'containerImage',\n            imageGif: 'imageGif',\n            containerCloseClass: \"containerClose\"\n        }\n\n    }\n\n    createView(){\n        if ( !this.existView() ){\n            this.containerView = document.createElement(\"section\")\n            this.containerView.setAttribute(\"class\", this.classGif.containerClass);\n            this.containerView.setAttribute(\"id\", this.classGif.containerClass);\n\n            this.containerTitle = document.createElement('h1');\n            this.containerTitle.setAttribute('class', this.classGif.containerTitle)\n            this.containerTitle.innerHTML = this.titleGif;\n\n            this.containerImageGif =document.createElement(\"article\");\n            this.containerImageGif.setAttribute(\"class\", this.classGif.containerImage);\n            this.containerImageGif.setAttribute(\"id\", this.classGif.containerImage);\n\n            this.imageGifs =document.createElement(\"img\");\n            this.imageGifs.setAttribute(\"class\", this.classGif.imageGif);\n            this.imageGifs.setAttribute(\"id\", this.classGif.imageGif);\n            this.imageGifs.setAttribute(\"alt\", this.titleGif);\n            this.imageGifs.setAttribute(\"src\", this.imageGif);\n\n            this.containerClose =document.createElement(\"div\");\n            this.containerClose.setAttribute(\"class\", this.classGif.containerCloseClass);\n            this.containerClose.setAttribute(\"id\", this.classGif.containerCloseClass);\n            this.containerClose.innerHTML = \"X\";\n             \n\n            this.containerView.append(this.containerClose);\n            this.containerView.append(this.containerTitle);\n            this.containerView.append(this.containerImageGif);\n            this.containerImageGif.append(this.imageGifs);\n\n\n\n            this.rootPage = document.getElementById(\"rootPage\");\n            this.rootPage.insertAdjacentElement(\"beforebegin\", this.containerView)\n            this.deleteView()\n\n        }\n        \n\n    }\n    deleteView(){\n        if (this.existView()) {\n            let idClose= document.getElementById(\"containerClose\");\n\n            idClose.addEventListener('click', ()=>{\n\n                this.containerView.classList.add('closeOut')\n                timer(400).subscribe(()=>this.idContainerView.remove());\n\n            },false);\n        }\n        \n    }\n\n    existView() {\n        this.idContainerView =document.getElementById(\"containerView\");\n\n        if (this.idContainerView) return true;\n        else return false;\n    }\n\n}\n\nexport default CreateView","import CreateView from './screen.class'\n\nconst ScreenGif = (title,img)=>{\n\n    let instanceCreateView =new CreateView(title, img);\n    instanceCreateView.createView();\n \n}\n\n\nexport default ScreenGif","import React from 'react'\nimport Card from \"@material-ui/core/Card\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport ScreenGif from '../screengif/screen.component'\nimport './card.component.css'\n\nconst handleScreen = (title,img)=>{\n    ScreenGif(title,img)\n }\n\nconst CardGif = ({data})=>{\n\n   return data.map((gif,key)=>{\n       \n        return gif.images.downsized.url ? <Card className=\"cardGif animate\" key={key} onClick={()=>handleScreen(gif.title,gif.images.downsized.url)}>\n           \n            <CardHeader title={gif.title.substring(0,14) + '..'} ></CardHeader>\n\n            <img className='animate'  src={gif.images.downsized.url} alt={gif.title} ></img>\n\n            </Card> : null\n    }) \n\n\n\n}\n\nexport default CardGif","import  React  from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport './skeleton.card.css'\n\nconst Skeletons = () =>{\n    return <div >\n        <section className=\"loadingContainer animate\" >\n            <CircularProgress color=\"primary\"></CircularProgress> \n        </section>\n\n        <section className=\"containerSkeleton animate\">\n            <article className=\"SkeletonCard animateSkeleton\"></article>\n            <article className=\"SkeletonCard animateSkeleton\"></article>\n            <article className=\"SkeletonCard animateSkeleton\"></article>\n            <article className=\"SkeletonCard animateSkeleton\"></article>\n    </section>\n    </div>\n}\n\nexport default Skeletons;\n\n ","import {ajax} from \"rxjs/ajax\"\nimport {delay, pluck} from \"rxjs/operators\"\n\nconst getGifs = (limit=10)=>{\n    const url = `http://api.giphy.com/v1/gifs/trending?api_key=BMCs8nTHGEanLpXffXxB9Im4hMuTCTPh&limit=${limit}`;\n   return ajax.get(url).pipe(pluck(\"response\",\"data\"),delay(200))\n}\n\n \nexport default getGifs\n \n ","import React,{useState,useEffect} from 'react'\nimport CardGif from \"../../components/card/card.component\"\nimport Skeletons from '../../components/skeleton/skeleton.card' \nimport getGifs from '../../services/gif.service'\n \nconst changeState = (setData,setLoading) =>{\n  return  getGifs().subscribe((resp)=>{\n        setData(resp);\n    }, ()=>{return},()=>{ setLoading(true) })\n}\n\nconst Home = ()=>{\n    \n    const [data,setData] = useState([]);\n    const [loading, setLoading] = useState(false)\n     \n   useEffect(()=>{\n        changeState(setData,setLoading)\n\n        return ()=> changeState(setData,setLoading).unsubscribe();\n    },[])\n\n  \n    return <div>\n           \n            <h1 className=\"centerTitle animate\">Trending gifs</h1>\n            <section className=\"containerGifs\">  \n            {\n                loading === false ? <Skeletons /> : <CardGif data={data}/>\n            }\n            </section>\n        </div>\n}\n\nexport default Home;\n\n\n\n\n","import {ajax} from \"rxjs/ajax\"\nimport {delay, pluck} from \"rxjs/operators\"\n\nconst SearchGif = (title) =>{\n    const urlSearch = `http://api.giphy.com/v1/gifs/search?api_key=BMCs8nTHGEanLpXffXxB9Im4hMuTCTPh&q=${title}&limit=10`;\n    return ajax.get(urlSearch).pipe(pluck(\"response\",\"data\"),delay(300))\n}\nexport default SearchGif\n \n","import React,{ useState} from 'react'\nimport \"./search.css\"\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport SearchGif from '../../services/search.service'\nimport CardGif from \"../../components/card/card.component\"\nimport Skeletons from '../../components/skeleton/skeleton.card' \n \n\nconst execHttp = (title,setLoading,setFinded)=>{\n    setLoading(false)\n\n    return SearchGif(title).subscribe((resp)=>{\n        setFinded(resp)\n    } , ()=>{}, ()=>{setLoading(true)})\n\n}\n\nconst SearchPage = () =>{\n    const [finded,setFinded ] = useState([]);\n    const [textInput,setTextInput] = useState('');\n    const [loading,setLoading] = useState(true);\n   \n \n    const execSearch = ()=>{\n        if (textInput.length) execHttp(textInput,setLoading,setFinded);\n    }\n\n  \n    return <>\n            <section className=\"containersearch animate\">\n                 <TextField type=\"search\" id=\"standard-basic\" variant=\"outlined\" onChange={(e)=>setTextInput(e.target.value.trim()) } label=\"Search\" className=\"fieldSearch\" />\n                \n                <article>\n                    <Button value={textInput} disabled={textInput.length < 1} className=\"buttonSearch\" onClick={()=>execSearch()} color=\"primary\">Ok</Button>\n                    {\n                        finded.length > 0 ? <Button className=\"animateOut\" color=\"secondary\" onClick={()=>{setFinded([])}}>Clear</Button> : null \n                    }\n                </article>\n                <article className=\"containerGifs animate animateOut\">\n                    {\n                        loading === false ? <Skeletons /> : <CardGif  data={finded}/>\n                    }\n                </article>\n            </section>\n \n        </>\n\n\n}\n\nexport default SearchPage","import React from 'react'; \nimport \"./styles/index.css\"\nimport Button from '@material-ui/core/Button'\nimport {NavLink} from 'react-router-dom'\nconst  App = ()=> {\n  \n  const headerRefs = ()=>{\n     return <div className=\"bar animate\">\n          \n              <header className=\"headerGiff\">\n                <Button className=\"link\" ><NavLink to=\"./home\">Start</NavLink></Button>\n              </header>\n              <section className=\"containerBanner\">\n                <img src=\"/images/background.png\" alt=\"banner\"></img>\n              </section>\n        </div>\n  }\n\n\n  return headerRefs() \n}\n\nexport default App;\n","import React from 'react'\nimport \"./menu.css\"\nimport Button from '@material-ui/core/Button'\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {NavLink} from 'react-router-dom'\n\nconst Menu = ()=>{\n\n    return <header className=\"headerMenu\">\n\n        <article className=\"iconImg\">\n            <img src=\"/images/gif.svg\" alt=\"icon\"></img>\n        </article>\n\n        <ul> \n            <Button  className=\"menuButton animate\"><NavLink exact activeClassName=\"active\" to=\"./home\" ><HomeIcon />  </NavLink></Button>\n            <Button className=\"menuButton animate\"><NavLink  exact activeClassName=\"active\" to=\"./search\" ><SearchIcon />  </NavLink></Button> \n        </ul>\n        \n        </header>\n     \n\n   \n}\nexport default Menu\n","import React from 'react'\nimport Home from '../pages/home/home.page'\nimport SearchPage from '../pages/search/search.page'\nimport App from '../App'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom'\nimport Menu from '../components/menu/menu.component'\n\n\nconst RoutingApp = ()=>{\n\n    return <Router>\n   \n            <div>\n               <Menu />\n                <Switch>\n                    <Route path='/home' component={Home} />\n                    <Route path='/search' component={SearchPage}/>\n                    <Route path='/' component={App}/>\n                </Switch>\n                </div>\n\n            </Router>\n \n}\nexport default RoutingApp\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport RoutingApp from './routing/app.routing'\n\nexport const Main = ()=>{\n  return <>\n      <RoutingApp />\n    </>\n}\n\nReactDOM.render(<Main />, document.getElementById('rootPage'));\n"],"sourceRoot":""}